class Broker(): 
    def __init__(self): 
        self.topic_data: Dict[str, List] = {}
        self.topic_subscribed: Dict[str, List] = {}

    def receive_data(self, received: Tuple[str, str, float]): 
        id    = received[0]
        topic = received[1]
        data  = received[2]

        if topic not in self.topic_subscribed: 
            print("The device is not registered in any topic.")
            return 
        
        self.topic_data[topic].append(data)
        self.publish(topic, id)

    def publish(self, topic: str, id: str): 
        sensors = [
            sensor
            for sensor in self.topic_subscribed[topic] 
            if sensor.get_id() != id
        ]

        if sensors: 
            for sensor in sensors: 
                sensor.receive_data(self.topic_data[topic][-1])
                
    def subscribe(self, topic: str, node: Node): 
        if topic not in self.topic_subscribed: 
            self.topic_subscribed[topic] = []
            self.topic_data[topic] = []

        self.topic_subscribed[topic].append(node)
        self.topic_data[topic].append(node.get_state())


